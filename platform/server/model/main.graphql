"""
@model(delete: false)
@versioned
"""
type DistributionCentre implements Address {
  id: ID!
  name: String
  address1: String
  address2: String
  city: String
  postcode: Int
  lat: Float
  long: Float
  """
  @oneToMany(field: "distributionCentre")
  """
  products: [Product]
}

"""
@model(delete: false)
@versioned
"""
type Volunteer {
  id: ID!
  firstName: String
  lastName: String
  email: String
  username: String!
  address1: String
  address2: String
  city: String
  postcode: Int
  dateOfBirth: DateTime
  canDeliver: Boolean
  actionsCompleted: Int
  active: Boolean

  """
  @oneToMany(field: 'volunteer')
  """
  actions: [VolunteerAction]
}

"""
@model(delete: false)
@versioned
"""
type Recipient implements Address {
  id: ID!
  firstName: String
  lastName: String
  phone: String
  address1: String
  address2: String
  postcode: Int
  city: String
  lat: Float
  long: Float
  actionsCompleted: Int
  deliveryDays: String
  """
  Comma separated list of preferrend products labels.
  Easier to create volunteer actions when knowing what one really needs.
  """
  prefferedProducts: String
  """
  @oneToMany(field: 'recipient')
  """
  actions: [VolunteerAction]
}

"""
Represents action that is assigned to volunteer

@model
@versioned
"""
type VolunteerAction {
  id: ID!
  title: String!
  description: String
  status: ActionStatus
  assignedAt: DateTime
  completedAt: DateTime
  """
  @manyToOne(field: 'actions', key: 'volunteerId')
  """
  volunteer: Volunteer
  """
  @manyToOne(field: 'actions', key: 'distributionCentreId')
  """
  distributionCentre: DistributionCentre
  """
  @oneToMany(field: 'volunteerAction')
  """
  products: [VolunteerActionProduct]
}

"""
Represents a join model between a volunteer action and product

@model(create: true, update: false, delete: false, subCreate: false, subUpdate: false, subDelete: false)
@versioned
"""
type VolunteerActionProduct {
  id: ID!
}

interface Address {
  address1: String
  address2: String
  city: String
  postcode: Int
  lat: Float
  long: Float
}

"""
@model(delete: false)
@versioned
"""
type Product {
  id: ID!
  label: String!
  description: String
  """
  @oneToMany(field: 'product')
  """
  volunteerActionProducts: [VolunteerActionProduct]
}

enum ActionStatus {
  CREATED
  ASSIGNED
  COMPLETED
}

scalar DateTime
scalar ID
