(window.webpackJsonp=window.webpackJsonp||[]).push([[17],{119:function(e,t,a){"use strict";a.r(t),a.d(t,"frontMatter",(function(){return o})),a.d(t,"metadata",(function(){return l})),a.d(t,"rightToc",(function(){return c})),a.d(t,"default",(function(){return b}));var n=a(1),i=a(6),r=(a(0),a(123)),o={id:"integrations",title:"Integrations",sidebar_label:"Integrations"},l={id:"integrations",title:"Integrations",description:"## Integrations",source:"@site/../docs/integrations.md",permalink:"/docs/integrations",editUrl:"https://github.com/aerogear/OpenVolunteerPlatform/edit/master/website/../docs/integrations.md",sidebar_label:"Integrations",sidebar:"docs",previous:{title:"Getting Started",permalink:"/docs/gettingstartedref"},next:{title:"Data Model",permalink:"/docs/datamodel"}},c=[{value:"Integrations",id:"integrations",children:[]},{value:"Prerequisites",id:"prerequisites",children:[]},{value:"Setting Up Keycloak Protection in the Voyager Framework",id:"setting-up-keycloak-protection-in-the-voyager-framework",children:[]},{value:"Use the <code>@hasRole</code> Directive On Your Schema",id:"use-the-hasrole-directive-on-your-schema",children:[{value:"Example: Using the @hasRole Directive to Apply Role Based Authorization on a Schema",id:"example-using-the-hasrole-directive-to-apply-role-based-authorization-on-a-schema",children:[]},{value:"Role Based Authorization on Fields",id:"role-based-authorization-on-fields",children:[]}]}],s={rightToc:c};function b(e){var t=e.components,a=Object(i.a)(e,["components"]);return Object(r.b)("wrapper",Object(n.a)({},s,a,{components:t,mdxType:"MDXLayout"}),Object(r.b)("h2",{id:"integrations"},"Integrations"),Object(r.b)("h2",{id:"prerequisites"},"Prerequisites"),Object(r.b)("ul",null,Object(r.b)("li",{parentName:"ul"},"There is a Keycloak service available."),Object(r.b)("li",{parentName:"ul"},"You must first create a client for your application in the Keycloak Administration Console, and then click on the ",Object(r.b)("inlineCode",{parentName:"li"},"Installation")," tab, select ",Object(r.b)("inlineCode",{parentName:"li"},"Keycloak OIDC JSON")," for ",Object(r.b)("inlineCode",{parentName:"li"},"Format")," Option, and then click on ",Object(r.b)("inlineCode",{parentName:"li"},"Download"),". Save the downloaded ",Object(r.b)("inlineCode",{parentName:"li"},"keycloak.json")," file to your project.")),Object(r.b)("h2",{id:"setting-up-keycloak-protection-in-the-voyager-framework"},"Setting Up Keycloak Protection in the Voyager Framework"),Object(r.b)("ol",null,Object(r.b)("li",{parentName:"ol"},"Import Voyager Keycloak module",Object(r.b)("pre",{parentName:"li"},Object(r.b)("code",Object(n.a)({parentName:"pre"},{className:"language-javascript"}),"const { KeycloakSecurityService } = require('../../packages/voyager-keycloak')\n"))),Object(r.b)("li",{parentName:"ol"},"Read the Keycloak config and pass it to initialise the ",Object(r.b)("inlineCode",{parentName:"li"},"KeycloakSecurityService"),".",Object(r.b)("pre",{parentName:"li"},Object(r.b)("code",Object(n.a)({parentName:"pre"},{className:"language-javascript"}),"const keycloakConfig = JSON.parse(fs.readFileSync(path.resolve(__dirname, './path/to/keycloak.json')))\nconst keycloakService = new KeycloakSecurityService(keycloakConfig)\n"))),Object(r.b)("li",{parentName:"ol"},"Use the ",Object(r.b)("inlineCode",{parentName:"li"},"keycloakService")," instance to protect your app:",Object(r.b)("pre",{parentName:"li"},Object(r.b)("code",Object(n.a)({parentName:"pre"},{className:"language-javascript"}),"const app = express()\nkeycloakService.applyAuthMiddleware(app)\n"))),Object(r.b)("li",{parentName:"ol"},"The last piece of work to do is telling Voyager server that the ",Object(r.b)("inlineCode",{parentName:"li"},"keycloakService")," above will be used as the security service:",Object(r.b)("pre",{parentName:"li"},Object(r.b)("code",Object(n.a)({parentName:"pre"},{className:"language-javascript"}),"const voyagerConfig = {\n  securityService: keycloakService\n}\nconst server = VoyagerServer(apolloConfig, voyagerConfig)\n")))),Object(r.b)("p",null,"The ",Object(r.b)("a",Object(n.a)({parentName:"p"},{href:"https://github.com/aerogear/voyager-server/blob/master/doc/guides/examples.md#keycloak-example"}),"Keycloak Example Server Guide")," has an example server based off the instructions above and shows all of the steps needed to get it running."),Object(r.b)("h2",{id:"use-the-hasrole-directive-on-your-schema"},"Use the ",Object(r.b)("inlineCode",{parentName:"h2"},"@hasRole")," Directive On Your Schema"),Object(r.b)("p",null,"The Voyager Keycloak module provides the ",Object(r.b)("inlineCode",{parentName:"p"},"@hasRole")," directive to define role based authorisation in your schema. The ",Object(r.b)("inlineCode",{parentName:"p"},"@hasRole")," directive is a special annotation that can be applied to"),Object(r.b)("ul",null,Object(r.b)("li",{parentName:"ul"},"Fields"),Object(r.b)("li",{parentName:"ul"},"Queries"),Object(r.b)("li",{parentName:"ul"},"Mutations"),Object(r.b)("li",{parentName:"ul"},"Subscriptions")),Object(r.b)("p",null,"The ",Object(r.b)("inlineCode",{parentName:"p"},"@hasRole")," usage is as follows:"),Object(r.b)("ul",null,Object(r.b)("li",{parentName:"ul"},Object(r.b)("inlineCode",{parentName:"li"},"@hasRole(role: String)"),Object(r.b)("ul",{parentName:"li"},Object(r.b)("li",{parentName:"ul"},"Example - ",Object(r.b)("inlineCode",{parentName:"li"},'@hasRole(role: "admin"])')),Object(r.b)("li",{parentName:"ul"},"If the authenticated user has the role ",Object(r.b)("inlineCode",{parentName:"li"},"admin")," they will be authorized."))),Object(r.b)("li",{parentName:"ul"},Object(r.b)("inlineCode",{parentName:"li"},"@hasRole(role: [String])"),Object(r.b)("ul",{parentName:"li"},Object(r.b)("li",{parentName:"ul"},"Example - ",Object(r.b)("inlineCode",{parentName:"li"},'@hasRole(role: ["admin", "editor"])')),Object(r.b)("li",{parentName:"ul"},"If the authenticated user has ",Object(r.b)("strong",{parentName:"li"},"at least one of the roles")," in the list, they will be authorized.")))),Object(r.b)("p",null,Object(r.b)("strong",{parentName:"p"},"The default behaviour is to check client roles.")," For example, ",Object(r.b)("inlineCode",{parentName:"p"},'@hasRole(role: "admin"])')," will check that user has a client role called ",Object(r.b)("inlineCode",{parentName:"p"},"admin"),". ",Object(r.b)("inlineCode",{parentName:"p"},'@hasRole(role: "realm:admin"])')," will check if that user has a realm role called ",Object(r.b)("inlineCode",{parentName:"p"},"admin")," "),Object(r.b)("p",null,"The syntax for checking a realm role is ",Object(r.b)("inlineCode",{parentName:"p"},'@hasRole(role: "realm:<role>")'),". For example, ",Object(r.b)("inlineCode",{parentName:"p"},'@hasRole(role: "realm:admin")'),". Using a list of roles, it is possible to check for both client and realm roles at the same time."),Object(r.b)("h3",{id:"example-using-the-hasrole-directive-to-apply-role-based-authorization-on-a-schema"},"Example: Using the @hasRole Directive to Apply Role Based Authorization on a Schema"),Object(r.b)("p",null,"The following example demonstrates how the ",Object(r.b)("inlineCode",{parentName:"p"},"@hasRole")," directive can be used to define role based authorization on various parts of a GraphQL schema. This example schema represents publishing application like a news or blog website."),Object(r.b)("pre",null,Object(r.b)("code",Object(n.a)({parentName:"pre"},{}),'type Post {\n  id: ID!\n  title: String!\n  author: Author!\n  content: String!\n  createdAt: Int!\n}\n\ntype Author {\n  id: ID!\n  name: String!\n  posts: [Post]!\n  address: String! @hasRole(role: "admin")\n  age: Int! @hasRole(role: "admin")\n}\n\ntype Query {\n  allPosts:[Post]!\n  getAuthor(id: ID!):Author!\n}\n\ntype Mutation {\n  editPost:[Post]! @hasRole(role: ["editor", "admin"])\n  deletePost(id: ID!):[Post] @hasRole(role: "admin")\n}\n')),Object(r.b)("p",null,"There are two types:"),Object(r.b)("ul",null,Object(r.b)("li",{parentName:"ul"},Object(r.b)("inlineCode",{parentName:"li"},"Post")," - This might be an article or a blog post"),Object(r.b)("li",{parentName:"ul"},Object(r.b)("inlineCode",{parentName:"li"},"Author")," - This would represent the person that authored a Post")),Object(r.b)("p",null,"There are two Queries:"),Object(r.b)("ul",null,Object(r.b)("li",{parentName:"ul"},Object(r.b)("inlineCode",{parentName:"li"},"allPosts")," - This might return a list of posts"),Object(r.b)("li",{parentName:"ul"},Object(r.b)("inlineCode",{parentName:"li"},"getAuthor")," - This would return details about an Author")),Object(r.b)("p",null,"There are two Mutations:"),Object(r.b)("ul",null,Object(r.b)("li",{parentName:"ul"},Object(r.b)("inlineCode",{parentName:"li"},"editPost")," - This would edit an existing post"),Object(r.b)("li",{parentName:"ul"},Object(r.b)("inlineCode",{parentName:"li"},"deletePost")," - This would delete a post.")),Object(r.b)("h4",{id:"role-based-authorization-on-queries-and-mutations"},"Role Based Authorization on Queries and Mutations"),Object(r.b)("p",null,"In the example schema, the ",Object(r.b)("inlineCode",{parentName:"p"},"@hasRole")," directive has been applied to the ",Object(r.b)("inlineCode",{parentName:"p"},"editPost")," and ",Object(r.b)("inlineCode",{parentName:"p"},"deletePost")," mutations. The same could be done on Queries."),Object(r.b)("ul",null,Object(r.b)("li",{parentName:"ul"},"Only users with the roles ",Object(r.b)("inlineCode",{parentName:"li"},"editor")," and/or ",Object(r.b)("inlineCode",{parentName:"li"},"admin")," are allowed to perform the ",Object(r.b)("inlineCode",{parentName:"li"},"editPost")," mutation."),Object(r.b)("li",{parentName:"ul"},"Only users with the role ",Object(r.b)("inlineCode",{parentName:"li"},"admin")," are allowed to perform the ",Object(r.b)("inlineCode",{parentName:"li"},"deletePost")," mutation.")),Object(r.b)("p",null,"This example shows how the ",Object(r.b)("inlineCode",{parentName:"p"},"@hasRole")," directive can be used on various queries and mutations."),Object(r.b)("h3",{id:"role-based-authorization-on-fields"},"Role Based Authorization on Fields"),Object(r.b)("p",null,"In the example schema, the ",Object(r.b)("inlineCode",{parentName:"p"},"Author")," type has the fields ",Object(r.b)("inlineCode",{parentName:"p"},"address")," and ",Object(r.b)("inlineCode",{parentName:"p"},"age")," which both have ",Object(r.b)("inlineCode",{parentName:"p"},'hasRole(role: "admin")')," applied. "),Object(r.b)("p",null,"This means that users without the role ",Object(r.b)("inlineCode",{parentName:"p"},"admin")," are not authorized to request these fields ",Object(r.b)("strong",{parentName:"p"},"in any query or mutation"),"."),Object(r.b)("p",null,"For example, non admin users are allowed to run the ",Object(r.b)("inlineCode",{parentName:"p"},"getAuthor")," query, but they cannot request back the ",Object(r.b)("inlineCode",{parentName:"p"},"address")," or ",Object(r.b)("inlineCode",{parentName:"p"},"age")," fields."))}b.isMDXComponent=!0},123:function(e,t,a){"use strict";a.d(t,"a",(function(){return p})),a.d(t,"b",(function(){return m}));var n=a(0),i=a.n(n);function r(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function o(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,n)}return a}function l(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?o(Object(a),!0).forEach((function(t){r(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):o(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function c(e,t){if(null==e)return{};var a,n,i=function(e,t){if(null==e)return{};var a,n,i={},r=Object.keys(e);for(n=0;n<r.length;n++)a=r[n],t.indexOf(a)>=0||(i[a]=e[a]);return i}(e,t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(n=0;n<r.length;n++)a=r[n],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(i[a]=e[a])}return i}var s=i.a.createContext({}),b=function(e){var t=i.a.useContext(s),a=t;return e&&(a="function"==typeof e?e(t):l({},t,{},e)),a},p=function(e){var t=b(e.components);return i.a.createElement(s.Provider,{value:t},e.children)},d={inlineCode:"code",wrapper:function(e){var t=e.children;return i.a.createElement(i.a.Fragment,{},t)}},u=Object(n.forwardRef)((function(e,t){var a=e.components,n=e.mdxType,r=e.originalType,o=e.parentName,s=c(e,["components","mdxType","originalType","parentName"]),p=b(a),u=n,m=p["".concat(o,".").concat(u)]||p[u]||d[u]||r;return a?i.a.createElement(m,l({ref:t},s,{components:a})):i.a.createElement(m,l({ref:t},s))}));function m(e,t){var a=arguments,n=t&&t.mdxType;if("string"==typeof e||n){var r=a.length,o=new Array(r);o[0]=u;var l={};for(var c in t)hasOwnProperty.call(t,c)&&(l[c]=t[c]);l.originalType=e,l.mdxType="string"==typeof e?e:n,o[1]=l;for(var s=2;s<r;s++)o[s]=a[s];return i.a.createElement.apply(null,o)}return i.a.createElement.apply(null,a)}u.displayName="MDXCreateElement"}}]);